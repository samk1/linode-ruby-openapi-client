=begin
#Linode API

#[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

The version of the OpenAPI document: 4.177.1
Contact: support@linode.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for LinodeOpenapiClient::AddedGetEvents200DataInner
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe LinodeOpenapiClient::AddedGetEvents200DataInner do
  let(:instance) { LinodeOpenapiClient::AddedGetEvents200DataInner.new }

  describe 'test an instance of AddedGetEvents200DataInner' do
    it 'should create an instance of AddedGetEvents200DataInner' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(LinodeOpenapiClient::AddedGetEvents200DataInner)
    end
  end

  describe 'test attribute "entity"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "action"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["account_update", "account_settings_update", "aclb_create", "aclb_update", "aclb_delete", "aclb_config_create", "aclb_config_update", "aclb_config_delete", "aclb_route_create", "aclb_route_update", "aclb_route_delete", "aclb_servicetarget_create", "aclb_servicetarget_update", "aclb_servicetarget_delete", "aclb_certificate_create", "aclb_certificate_update", "aclb_certificate_delete", "backups_enable", "backups_cancel", "backups_restore", "community_question_reply", "community_like", "credit_card_updated", "disk_create", "disk_delete", "disk_update", "disk_duplicate", "disk_imagize", "disk_resize", "dns_record_create", "dns_record_delete", "dns_record_update", "dns_zone_create", "dns_zone_delete", "dns_zone_import", "dns_zone_update", "entity_transfer_accept", "entity_transfer_cancel", "entity_transfer_create", "entity_transfer_fail", "entity_transfer_stale", "firewall_create", "firewall_delete", "firewall_disable", "firewall_enable", "firewall_update", "firewall_device_add", "firewall_device_remove", "host_reboot", "image_delete", "image_update", "image_upload", "ipaddress_update", "lassie_reboot", "lish_boot", "linode_addip", "linode_boot", "linode_clone", "linode_create", "linode_delete", "linode_update", "linode_deleteip", "linode_migrate", "linode_migrate_datacenter", "linode_migrate_datacenter_create", "linode_mutate", "linode_mutate_create", "linode_reboot", "linode_rebuild", "linode_resize", "linode_resize_create", "linode_shutdown", "linode_snapshot", "linode_config_create", "linode_config_delete", "linode_config_update", "lke_node_create", "longviewclient_create", "longviewclient_delete", "longviewclient_update", "managed_disabled", "managed_enabled", "managed_service_create", "managed_service_delete", "nodebalancer_create", "nodebalancer_delete", "nodebalancer_update", "nodebalancer_config_create", "nodebalancer_config_delete", "nodebalancer_config_update", "nodebalancer_node_create", "nodebalancer_node_delete", "nodebalancer_node_update", "oauth_client_create", "oauth_client_delete", "oauth_client_secret_reset", "oauth_client_update", "obj_access_key_create", "obj_access_key_delete", "obj_access_key_update", "password_reset", "payment_method_add", "payment_submitted", "placement_group_assign", "placement_group_became_compliant", "placement_group_became_non_compliant", "placement_group_create", "placement_group_delete", "placement_group_unassign", "placement_group_update", "profile_update", "stackscript_create", "stackscript_delete", "stackscript_update", "stackscript_publicize", "stackscript_revise", "subnet_create", "subnet_delete", "subnet_update", "tag_create", "tag_delete", "tfa_disabled", "tfa_enabled", "ticket_attachment_upload", "ticket_create", "ticket_update", "token_create", "token_delete", "token_update", "user_create", "user_update", "user_delete", "user_ssh_key_add", "user_ssh_key_delete", "user_ssh_key_update", "vlan_attach", "vlan_detach", "volume_attach", "volume_clone", "volume_create", "volume_delete", "volume_update", "volume_detach", "volume_resize", "vpc_create", "vpc_delete", "vpc_update"])
      # validator.allowable_values.each do |value|
      #   expect { instance.action = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "time_remaining"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "rate"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "percent_complete"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "seen"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "username"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "secondary_entity"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "duration"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "status"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["failed", "finished", "notification", "scheduled", "started"])
      # validator.allowable_values.each do |value|
      #   expect { instance.status = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "read"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "created"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "message"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
